#= 
    This code was generated by heta-compiler 0.7.1
    
=#

__platform__ = (function()

### create default constants
nameless_constants_num_ = NamedTuple{(
  :k1,
)}(Float64[
  0.12,
])

### create default observables
nameless_records_output_ = NamedTuple{(
  :comp1,:A,:B,:r1,
)}(Bool[
  true,true,true,true,
])

### create default events
nameless_events_active_ = NamedTuple{(
  
)}(Bool[
  
])

### initialization of ODE variables and Records
function nameless_init_func_(__constants__)
    # Heta initialize
    t = 0.0 # initial time
    B = 0e+0
    A = 1e+1
    comp1 = 1e+0
    r1 = __constants__[1] * A * comp1
    
    # save results

    return (
        Float64[
            A * comp1,
            B * comp1,
        ],
        Float64[
            __constants__...,
            comp1,
        ]
    )
end

### calculate RHS of ODE
function nameless_ode_func_(__du__, __u__, __p__, t)
    __constants__ = __p__[1:1]
    (comp1,) = __p__[2:2]
    (A_,B_,) = __u__ 

    # Heta rules
    B = B_ / comp1
    A = A_ / comp1
    r1 = __constants__[1] * A * comp1
    
    #__p__[2:2] .= [comp1,]
    __du__ .= [
      -r1,  # dA_/dt
      2*r1,  # dB_/dt
    ]
end

### output function
function nameless_saving_generator_(__outputIds__::Vector{Symbol})
    # XXX: currently force amounts: s1_, s2_ are not supported
    __actual_indexes__ = indexin(__outputIds__, [:comp1,:A,:B,:r1,])
    # check nothing in __actual_indexes__
    __wrongIndexes__ = findall(x -> x===nothing, __actual_indexes__)
    if length(__wrongIndexes__) > 0
      __wrongIds__ = __outputIds__[__wrongIndexes__]
      throw("Wrong identifiers: $(__wrongIds__)")
    end

    function saving_(__u__, t, __integrator__)
        __constants__ = __integrator__.p[1:1]
        (comp1,) = __integrator__.p[2:2]
        (A_,B_,) = __u__

        # Heta rules
        B = B_ / comp1
        A = A_ / comp1
        r1 = __constants__[1] * A * comp1
        
        # force amount

        return [comp1,A,B,r1,][__actual_indexes__]
    end
end

### TIME EVENTS ###

### D EVENTS ###

### STOP EVENTS ###

### event assignments


### MODELS ###

nameless_model_ = (
  nameless_init_func_,
  nameless_ode_func_,
  NamedTuple{(
  )}([
  ]),
  NamedTuple{(
  )}([
  ]),
  NamedTuple{(
  )}([
  ]),
  nameless_saving_generator_,
  nameless_constants_num_,
  nameless_events_active_,
  nameless_records_output_
)

### OUTPUT ###

return (
  (
    nameless = nameless_model_,
  ),
  (),
  "0.7.1"
)

end
)()