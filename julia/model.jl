#= 
    This code was generated by heta-compiler 0.8.1
=#

__platform__ = (function()

### create default constants
nameless_constants_num_ = NamedTuple{(
  :k1,
)}(Float64[
  0.12,
])

### create default observables
nameless_records_output_ = NamedTuple{(
  :comp1,:A,:B,:r1,
)}(Bool[
  true,true,true,true,
])

### create default events
nameless_events_active_ = NamedTuple{(
  
)}(Bool[
  
])

### vector of non-steady-state
nameless_dynamic_nonss_ = NamedTuple{(
  :A,:B,
)}(Bool[
  true,true,
])

### initialization of ODE variables and Records
function nameless_init_func_(__constants__)
    # Heta initialize
    t = 0.0 # initial time
    B = 0e+0
    A = 1e+1
    comp1 = 1e+0
    r1 = __constants__[1] * A * comp1
    
    # save results

    return (
        Float64[
            A * comp1,
            B * comp1,
        ],
        Float64[
            comp1,
            __constants__...
        ]
    )
end

### calculate RHS of ODE
function nameless_ode_func_(__du__, __u__, __p__, t)
    (comp1,) = __p__[1:1]
    __constants__ = __p__[2:2]
    (A_,B_,) = __u__ 

    # Heta rules
    B = B_ / comp1
    A = A_ / comp1
    r1 = __constants__[1] * A * comp1
    
    #__p__[1:1] .= [comp1,]
    __du__ .= [
      -r1,  # dA_/dt
      2*r1,  # dB_/dt
    ]
end

### output function
# XXX: currently force amounts: s1_, s2_ are not supported
function nameless_saving_generator_(__outputIds__::Vector{Symbol})
    __wrongIds__ = setdiff(__outputIds__, [:comp1,:A,:B,:r1,])
    !isempty(__wrongIds__) && throw("The following observables have not been found in the model's Records: $(__wrongIds__)")

    __out_expr__ = Expr(:block)
    [push!(__out_expr__.args, :(__out__[$i] = $obs)) for (i,obs) in enumerate(__outputIds__)]

    @eval function(__out__, __u__, t, __integrator__)
        (comp1,) = __integrator__.p[1:1]
        __constants__ = __integrator__.p[2:2]
        (A_,B_,) = __u__

        # Heta rules
        B = B_ / comp1
        A = A_ / comp1
        r1 = __constants__[1] * A * comp1
        
        # force amount

        $(__out_expr__)
        return nothing
    end
end

### TIME EVENTS ###

### D EVENTS ###

### STOP EVENTS ###

### event assignments


### MODELS ###

nameless_model_ = (
  nameless_init_func_,
  nameless_ode_func_,
  NamedTuple{(
  )}([
  ]),
  NamedTuple{(
  )}([
  ]),
  NamedTuple{(
  )}([
  ]),
  nameless_saving_generator_,
  nameless_constants_num_,
  nameless_events_active_,
  nameless_records_output_,
  nameless_dynamic_nonss_
)

### OUTPUT ###

return (
  (
    nameless = nameless_model_,
  ),
  (),
  "0.8.1"
)

end
)()