%%%% This code was generated by heta-compiler of v0.5.3
% 

function [ode_func, out_func, y0_, events_] = nameless_Model(p)

    ode_func = @ODEFunc;
    out_func = @OutputFunc;
    y0_ = InitFunc();

    % shared variable
    shared_values = zeros(1, 4);
    integrator = [];

    %%% Initialization of dynamic records
    function y__ = InitFunc()
        integrator = []; % reset integrator
        time = 0; % zero time
        B = 0; % B,  ()
        A = 10; % A,  ()
        comp1 = 1; % comp1,  ()
        r1 = p(1) * A * comp1; % r1,  ()

        y__ = [comp1; A * comp1; B * comp1];
    end

    function status = OutputFunc(time, y, flag)
        switch flag
            case 'done'
                assignin('base', 'output', integrator);
            case 'affect'
                integrator(end, :) = shared_values;
            otherwise
                integrator = [integrator; shared_values];
        end
        status = 0;
    end

    function dydt = ODEFunc(time, y)

        dydt = zeros(3, 1);

        %%% Dynamic records annotation
        %1 - comp1,  () 
        %2 - A,  () 
        %3 - B,  () 

        %%% Output records
        %  () 
        comp1 = y(1);
        %  () 
        B = y(3) / comp1;
        %  () 
        A = y(2) / comp1;
        %  () 
        r1 = p(1) * A * comp1;
        shared_values = [comp1, B, A, r1];

        %%% Differential equations
        dydt(1) = 0;
        dydt(2) = -r1;
        dydt(3) = 2*r1;
    end

    

    events_ = [];
end